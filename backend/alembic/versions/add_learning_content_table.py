"""add learning content table

Revision ID: add_learning_content
Revises: add_roadmap_table
Create Date: 2025-01-03 12:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'add_learning_content'
down_revision = 'add_roadmap_table'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('learning_content',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('content_type', sa.String(), nullable=False),
    sa.Column('topic', sa.String(), nullable=False),
    sa.Column('context', sa.String(), nullable=True),
    sa.Column('content_data', sa.JSON(), nullable=False),
    sa.Column('user_level', sa.String(), nullable=True),
    sa.Column('ai_generated', sa.Boolean(), nullable=True),
    sa.Column('generation_metadata', sa.JSON(), nullable=True),
    sa.Column('access_count', sa.String(), nullable=True),
    sa.Column('last_accessed', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_learning_content_user_topic_type', 'learning_content', ['user_id', 'topic', 'content_type'], unique=False)
    op.create_index(op.f('ix_learning_content_user_id'), 'learning_content', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_learning_content_user_id'), table_name='learning_content')
    op.drop_index('ix_learning_content_user_topic_type', table_name='learning_content')
    op.drop_table('learning_content')
    # ### end Alembic commands ### 