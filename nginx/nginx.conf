worker_processes 1;

events {
    worker_connections 1024;
}

http {
    limit_req_zone $binary_remote_addr zone=one:10m rate=3r/m;

    include       mime.types;
    default_type  application/octet-stream;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Logs (optional)
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;

    # Backend upstream
    upstream backend {
        server internai_backend:8000;
    }

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name internai.pro www.internai.pro;
        return 301 https://$host$request_uri;
    }

    # Main HTTPS server block
    server {
        listen 443 ssl http2;
        server_name internai.pro www.internai.pro;

        ssl_certificate /etc/letsencrypt/live/internai.pro/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/internai.pro/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        root /usr/share/nginx/html;
        index index.html;

        # Security headers
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        # üõ°Ô∏è Rate-limit register endpoint
        location = /api/register {
            limit_req zone=one burst=5 nodelay;

            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            error_page 429 = /rate-limit.json;
        }

        # Fallback for rate-limited response
        location = /rate-limit.json {
            return 429 '{"error":"Too many requests. Try again later."}';
            add_header Content-Type application/json;
        }

        # Proxy API requests to backend
        location /api/ {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            error_page 404 /404.json;
        }

        # SPA fallback
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
}
